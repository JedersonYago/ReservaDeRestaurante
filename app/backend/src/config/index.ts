import * as dotenv from "dotenv";

// IMPORTANTE: Carrega as vari√°veis de ambiente ANTES de importar outros m√≥dulos
dotenv.config();

import { databaseConfig } from "./database";
import { adminConfig } from "./admin";
import { serverConfig } from "./server";
import { corsConfig } from "./cors";

export const config = {
  // Configura√ß√µes do servidor
  server: serverConfig,

  // Configura√ß√µes do banco de dados
  database: databaseConfig,

  // Configura√ß√µes de autentica√ß√£o
  auth: adminConfig,

  // Configura√ß√µes de CORS
  cors: corsConfig,
} as const;

// Valida√ß√£o das configura√ß√µes
export function validateConfig() {
  const requiredEnvVars = [
    "MONGODB_URI",
    "JWT_SECRET",
  ];

  const missingEnvVars = requiredEnvVars.filter(
    (envVar) => !process.env[envVar]
  );

  if (missingEnvVars.length > 0) {
    throw new Error(
      `Missing required environment variables: ${missingEnvVars.join(", ")}`
    );
  }

  // Log das configura√ß√µes (sem valores sens√≠veis)
  console.log("üìã Configura√ß√µes carregadas:");
  console.log(`   NODE_ENV: ${process.env.NODE_ENV || 'development'}`);
  console.log(`   PORT: ${process.env.PORT || 3000}`);
  console.log(`   CORS_ORIGIN: ${process.env.CORS_ORIGIN || 'http://localhost:3000'}`);
  console.log(`   MONGODB_URI: ${process.env.MONGODB_URI ? '‚úÖ Configurado' : '‚ùå N√£o configurado'}`);
  console.log(`   JWT_SECRET: ${process.env.JWT_SECRET ? '‚úÖ Configurado' : '‚ùå N√£o configurado'}`);
}
