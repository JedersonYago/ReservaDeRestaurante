// Utilit√°rio para debugar configura√ß√µes no deploy
export const debugConfig = {
  logEnvironmentVariables() {
    console.log("üîç Debug: Vari√°veis de ambiente");
    console.log("VITE_API_URL:", import.meta.env.VITE_API_URL);
    console.log("NODE_ENV:", import.meta.env.NODE_ENV);
    console.log("MODE:", import.meta.env.MODE);
    console.log("BASE_URL:", import.meta.env.BASE_URL);
    console.log("DEV:", import.meta.env.DEV);
    console.log("PROD:", import.meta.env.PROD);
  },

  getApiUrl() {
    const apiUrl = import.meta.env.VITE_API_URL || "/api";
    console.log("üîó API URL configurada:", apiUrl);
    return apiUrl;
  },

  validateApiUrl() {
    const apiUrl = this.getApiUrl();

    // Verificar se a URL est√° malformada (cont√©m m√∫ltiplos dom√≠nios)
    if (apiUrl.includes("vercel.app") && apiUrl.includes("railway.app")) {
      console.error("‚ùå URL malformada detectada:", apiUrl);
      console.error(
        "A URL cont√©m m√∫ltiplos dom√≠nios. Verifique a configura√ß√£o VITE_API_URL no Vercel."
      );
      return false;
    }

    // Verificar se √© uma URL v√°lida
    try {
      if (apiUrl !== "/api") {
        new URL(apiUrl);
      }
      console.log("‚úÖ URL v√°lida");
      return true;
    } catch (error) {
      console.error("‚ùå URL inv√°lida:", apiUrl);
      return false;
    }
  },
};
